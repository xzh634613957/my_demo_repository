"""
    静态方法
"""
"""
    * 在开发时，如果需要在 **类** 中封装一个方法，这个方法：
          * 既 **不需要** 访问 **实例属性** 或者调用 **实例方法**
          * 也 **不需要** 访问 **类属性** 或者调用 **类方法**
        
          * 这个时候，可以把这个方法封装成一个 **静态方法**
"""
"""
    * **静态方法** 需要用 **修饰器** `@staticmethod` 来标识，**告诉解释器这是一个静态方法**
    * 通过 **类名.** 调用 **静态方法**
"""


class Dog(object):

    # 定义类属性
    count = 0

    # 定义静态方法
    @staticmethod
    def run():  # 括号里既没有代表实例方法的self, 也没有代表类方法的cls
        # 静态方法内部不需要访问实例属性和方法, 也不需要访问类属性和方法
        print("狗在跑")

    def __init__(self, name):
        self.name = name


# 静态方法无需实例化对象即可通过类名来调用
Dog.run()

