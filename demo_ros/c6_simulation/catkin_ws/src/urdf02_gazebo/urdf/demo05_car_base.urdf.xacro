<robot name="my_car" xmlns:xacro="http://wiki.ros.org/xacro">

    <!-- 1. Adding the base_footprint -->
    <!-- footprint_radius variables and constants -->
    <xacro:property name="footprint_radius" value="0.001" />    
    
    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="${footprint_radius}" />
            </geometry>
        </visual>
    </link>


    <!-- 2. Adding the base_link and its joint -->
    <!-- base_link variables and constants -->
    <xacro:property name="base_radius" value="0.1" />
    <xacro:property name="base_length" value="0.08" />
    <xacro:property name="base_mass" value="0.5" />
    <xacro:property name="lidi" value="0.015" />
    <xacro:property name="base_joint_z" value="${base_length / 2 + lidi}" />

    <link name="base_link">
        <visual>
            <geometry> 
                <cylinder radius="${base_radius}" length="${base_length}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <material name="baselink_color">
                <color rgba="0.8 0.3 0.1 0.5"/>
            </material>
        </visual>
        <collision>
            <geometry> 
                <cylinder radius="${base_radius}" length="${base_length}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </collision>
        <!-- inertial matrix (from head.xacro) -->
        <xacro:cylinder_inertial_matrix m="${base_mass}" r="${base_radius}" h="${base_length}" />
    </link>

    <!-- the joint of the base_link and the base_footprint -->
    <joint name="link2base_footprint" type="fixed">
        <parent link="base_footprint"/>        
        <child link="base_link"/>           
        <origin xyz="0 0 ${base_joint_z}" />       
    </joint>

    <gazebo reference="base_link" >
        <material>Gazebo/Yellow</material>
    </gazebo>

    
    <!-- 3. Adding the driving wheels and their joint -->
    <!-- wheel variables and constants -->
    <xacro:property name="wheel_radius" value="0.0325" />
    <xacro:property name="wheel_length" value="0.015" />
    <xacro:property name="wheel_mass" value="0.05" />
    <xacro:property name="PI" value="3.1415927" />
    <xacro:property name="wheel_joint_z" value="${ -base_length / 2 - lidi + wheel_radius}" />
    <!-- wheel macro -->
    <xacro:macro name="wheel_func" params="wheel_name flag" >

        <link name="${wheel_name}_wheel">
            <visual>
                <geometry>  
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <origin xyz="0 0 0" rpy="${PI / 2} 0 0"/>
                <material name="wheel_color">
                    <color rgba="0 0 0 0.5"/>
                </material>
            </visual>
            <collision>
                <geometry>  
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <origin xyz="0 0 0" rpy="${PI / 2} 0 0"/>
            </collision>
            <!-- inertial matrix (from head.xacro) -->
            <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
        </link>

        <!-- the joint of the base_link and the left_wheel -->
        <joint name="${wheel_name}2link" type="continuous">
            <parent link="base_link"/>        
            <child link="${wheel_name}_wheel"/>           
            <origin xyz="0 ${0.1 * flag} ${wheel_joint_z}" rpy="0 0 0" />
            <axis xyz="0 1 0"/>       
        </joint>

        <gazebo reference="${wheel_name}_wheel" >
            <material>Gazebo/Red</material>
        </gazebo>

    </xacro:macro>

    <!-- call wheel macro -->
    <xacro:wheel_func wheel_name="left" flag="1" />
    <xacro:wheel_func wheel_name="right" flag="-1" />


    <!-- 4. Adding the universal wheel and its joint -->
    <!-- wheel variables and constants -->
    <xacro:property name="universal_wheel_radius" value="0.0075" />
    <xacro:property name="universal_wheel_mass" value="0.03" />
    <xacro:property name="universal_joint_z" value="${(base_length / 2 + lidi - universal_wheel_radius) * -1}" />
    <!-- wheel macro -->
    <xacro:macro name="universal_wheel_func" params="universal_wheel_name flag" >

        <link name="${universal_wheel_name}_wheel">
            <visual>
                <geometry> 
                    <sphere radius="${universal_wheel_radius}" />
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <material name="black">
                    <color rgba="0 0 0 0.5"/>
                </material>
            </visual>
            <collision>
                <geometry> 
                    <sphere radius="${universal_wheel_radius}" />
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </collision>
             <!-- inertial matrix (from head.xacro) -->
             <xacro:sphere_inertial_matrix m="${universal_wheel_mass}" r="${universal_wheel_radius}" />
        </link>

        <!-- the joint of the base_link and the front_wheel -->
        <joint name="${universal_wheel_name}2link" type="continuous">
            <parent link="base_link"/>        
            <child link="${universal_wheel_name}_wheel"/>           
            <origin xyz="${0.08 * flag} 0 ${universal_joint_z}" rpy="0 0 0" />
            <axis xyz="1 1 1"/>       
        </joint>

        <gazebo reference="${universal_wheel_name}_wheel" >
            <material>Gazebo/Red</material>
        </gazebo>

    </xacro:macro> 
    
    <!-- call wheel macro -->
    <xacro:universal_wheel_func universal_wheel_name="front" flag="1" />
    <xacro:universal_wheel_func universal_wheel_name="back" flag="-1" />


</robot>